%YAML:1.0

#common parameters
#support: 1 imu 1 cam; 1 imu 2 cam: 2 cam; 
imu: 1         
num_of_cam: 2  

imu_topic: "/mynteye/imu/data_raw"
image0_topic: "/mynteye/left/image_color"
image1_topic: "/mynteye/right/image_color"
output_path: "/home/zj/output/"

cam0_calib: "left.yaml"
cam1_calib: "right.yaml"
image_width: 640
image_height: 480

#0 for off, 1 for on   
use_gpu:1   
use_gpu_acc_flow:1  


# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.

body_T_cam0: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [0.99997096, -0.00351742, -0.0067604,   0.00007682,
       -0.00349838, -0.99998989,  0.0028267,  -0.00012674,
       -0.00677027, -0.00280297, -0.99997315, -0.00006689,
        0.0, 0.0, 0.0, 1.0]


body_T_cam1: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [0.99992933, -0.00511723,  0.01073031,  0.12038591,
       -0.00512811, -0.99998636,  0.00098729, -0.00029768,
       0.01072511, -0.00104224, -0.99994194, -0.00003635,
        0.0, 0.0, 0.0, 1.0]


#Multiple thread support
multiple_thread: 1

#feature traker paprameters
max_cnt: 150            # max feature number in feature tracking
min_dist: 30            # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.020629228303769925        # accelerometer measurement noise standard deviation. #0.2   0.04
gyr_n: 0.0017516931524559458      # gyroscope measurement noise standard deviation.     #0.05  0.004
acc_w: 0.0003277905221828451      # accelerometer bias random work noise standard deviation.  #0.002
gyr_w: 1.9545238424512304e-05    # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.78760881         # gravity magnitude

#unsynchronization parameters
estimate_td: 0                      # online estimate time offset between camera and imu
td: 0.0181901386909           # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#loop closure parameters
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "/home/zj/output/pose_graph/" # save and load path
save_image: 0                   # save image in pose graph for visualization prupose; you can close this function by setting 0 
